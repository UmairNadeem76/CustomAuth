//TaskList.cs
using System.ComponentModel.DataAnnotations; // For defining validation and data annotations
using System.ComponentModel.DataAnnotations.Schema; // For defining database-related attributes
using CustomAuth.Entitites; // For referencing related entities

// The TaskList class represents a task entity in the database
public class TaskList
{
	// Primary Key: Auto-generated identity column for unique task identification
	[Key]
	[DatabaseGenerated(DatabaseGeneratedOption.Identity)] // Specifies that the value is generated by the database
	public int TaskID { get; set; }

	// Foreign Key: References the UserAccount table to associate tasks with a specific user
	public int UserID { get; set; }

	// Property to store the name of the task
	public string Task_Name { get; set; } // Maps to a varchar column in the database

	// Property to store a description of the task
	public string Task_Description { get; set; } // Maps to a varchar column in the database

	// Property to store the status of the task (e.g., Pending, Completed)
	public string Task_Status { get; set; } // Maps to an nvarchar column in the database

	// Property to store the priority of the task as an integer
	public int Task_Priority { get; set; } // Maps to an int column in the database

	// Property to indicate if the task has been soft-deleted
	[Column("isDeleted")] // Maps the property to a column explicitly named "isDeleted" in the database
	public bool isDeleted { get; set; }

	// Navigation property to link tasks to the associated user
	public UserAccount User { get; set; } // Represents the relationship with the UserAccount entity
}
